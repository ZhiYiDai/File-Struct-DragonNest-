//--------------------------------------
//--- 010 Editor v8.0 Binary Template
//
// File: Eternity Engine Kd-Tree File
// Author: DevNP <dev.necropan@gmail.com>
// Revision: 1.0
// Purpose:
// Category: Game
// File Mask: eventareainfo.ini
// ID Bytes: 
// History: 
//--------------------------------------


//int UNKNOWN_10A_SZ[512];
//int UNKNOWN_10B_SZ[1020];

//sainthaven POSITION 
//HermaltePort_New = X:-4371	Y:-1748000	Z:-6448469	Rotate:-7.446676
typedef struct{
    float bbStartX;
    float bbStartY;
    float bbStartZ;
    float bbEndX;
    float bbEndY;
    float bbEndZ;
    int bbRot;
}turnPosition <optimize=false>;

typedef struct {
   int vec1;    
     if(vec1>0){
        float x;
        float y;
        float z;
     }
        int vec2;
        int unknown13;
        float PosX;
        int unknown15;
        float PosY;
        int num1;
        int num2;
  if(num2>0){
    if(num1>0){
        float x;
        float y;
        float z;
        float rot; 
      } 
      int num3;
      int num4;
      int LenFile;
      char fileName[LenFile];
      if(num4>0){
         int LenFile2;
         char fileName2[LenFile2];
       }
  }
}PARAM;

typedef struct {   
    int LenChar;
    char areaName[LenChar];
    turnPosition vec;
    int PropIndex;
    byte unknown10a[508];   
    int MapSubType;
    int MapType;
    int Environment;
    byte unknown10b[1012];
    PARAM seting;
}EventArea <optimize=false,read=ReadGroupArea>;

string ReadGroupArea(EventArea &in){
 string out ;
     SPrintf(out, "%s ", in.areaName);
  return out;
}

int unknown1;
int numGroups;
typedef struct {
    int groupId;
    int CountGroup;
    if(CountGroup>0)
        EventArea grup[CountGroup];
}Group <optimize=false>;

Group gEvArea[numGroups];
